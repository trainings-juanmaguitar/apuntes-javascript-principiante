# DOM (el documento HTML en el navegador)

El **[DOM (Document Object Model)](http://www.w3.org/DOM/)** es una forma de representar un documento HTML (o XML) como un árbol de nodos.  
Utilizando los métodos y propiedades del DOM podremos acceder a los elementos de la página, modificarlo, eliminarlos o añadir nuevos

```html
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/
xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
        <title>Página sencilla</title>
    </head>
    <body>
        <p>Esta página es <strong>muy sencilla</strong></p>
    </body>
</html>
```

![DOM](images/dom.png)

En cualquier página web tenemos disponible el objeto `document` que contiene multitud de métodos y propiedades para interactuar con el DOM. 

## Selección de elementos 

El objeto `document` provee de métodos para seleccionar nodos. Estos métodos devuelven objetos [`element`](https://developer.mozilla.org/es/docs/Web/API/Element) a través de los cuales podremos acceder a las propiedades de estos nodos.

Dado este HTML...

```html
<!DOCTYPE html>
<html>
<head>
  <title>Example</title>
</head>
<body>
     <p id="name">juanma<p>
     <ul id="guitar-players">
        <li id="jimi" class="rock blues">Jimi Hendrix</li>
        <li class="blues"><a href="http://www.ericclapton.com/">Eric Clapton</a>a></li>
        <li class="rock">Eddie Van Halen</li>
        <li class="rock">Yngwie Malmsteen</li>
        <li class="jazz">Django Reinhardt</li>
        <li class="blues"><a href="http://www.bbking.com/">B.B.King</a></li>
        <li class="blues rock">Gary Moore</li>
     </ul>
</body>
</html>
```

Algunos de estos métodos para seleccionar elementos son:

- [`document.getElementById()`](https://developer.mozilla.org/es/docs/Web/API/Document/getElementById) Devuelve una referencia al elemento por su ID

```javascript
    var myName = document.getElementById(“name”);
```

- [`document.getElementsByClassName()`](https://developer.mozilla.org/es/docs/Web/API/Document/getElementsByClassName) o [`element.getElementsByClassName`](https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByClassName) Devuelve una lista de elementos (llamada [HTMLCollection](https://developer.mozilla.org/es/docs/Web/API/HTMLCollection)) con los nombres de clase indicados

```javascript

    var bluesGuitarPlayers = document.getElementsByClassName('blues')
    var rockGuitarPlayers = document.getElementsByClassName('rock')

    // or to restrict the search in an element...
    var myList = document.getElementById("guitar-players");
    var myBluesGuitarPlayers = myList.getElementsByClassName('blues')
    var myRockGuitarPlayers = myList.getElementsByClassName('rock')

    console.log( myRockGuitarPlayers[0].innerHTML )
    console.log( myRockGuitarPlayers.item(0).innerHTML )
    console.log( myRockGuitarPlayers.namedItem("jimi").innerHTML )

    for (var i = 0; i < myRockGuitarPlayers.length; ++i) {
      var link = myRockGuitarPlayers[i];  
      console.log(link.innerHTML);
    }

```

- [`document.getElementsByTagName()`](https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByTagName) o [`element.getElementsByTagName()`](https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagName) Devuelve una lista de elementos (HTMLCollection) con un tipo de tag determinado

```javascript
    var links = document.getElementsByTagName('a')
    
    // or to restrict the search in an element...
    var myList = document.getElementById("guitar-players");
    var linksGuitarPlayers = myList.getElementsByTagName('a')
```

- [`document.querySelector()`](https://developer.mozilla.org/es/docs/Web/API/Document/querySelector) o [`element.querySelector()`](https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector) Retorna _el primer elemento_ dentro del documento que coincide con el grupo especificado de selectores.

```javascript
    var linkBluesGuitarPlayer = document.querySelector('#guitar-players .blues a')
    
    // or to restrict the search in an element...
    var myList = document.getElementById("guitar-players");
    var linkBluesGuitarPlayer = myList.querySelector('.blues a')
    console.log(linkBluesGuitarPlayer.href);
```

- [`document.querySelectorAll()`](https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll) o [`element.querySelectorAll()`](https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll) Devuelve una lista de los elementos (una [NodeList](https://developer.mozilla.org/es/docs/Web/API/NodeList)) que coinciden con el grupo especificado de selectores

```javascript
    var linksBluesGuitarPlayers = document.querySelectorAll('#guitar-players .blues a')
    
    // or to restrict the search in an element...
    var myList = document.getElementById("guitar-players");
    var linksBluesGuitarPlayers = myList.querySelectorAll('.blues a')

    for (var i = 0; i < linksBluesGuitarPlayers.length; ++i) {
      var link = linksBluesGuitarPlayers[i];  
      console.log(link.href);
    }
```

A> Examples live at: https://jsfiddle.net/juanma/hgckdmrc/5/

## Selección de elementos con jQuery

## Selección nativa vs selección jQuery


